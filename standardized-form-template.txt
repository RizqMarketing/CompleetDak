STANDARDIZED FORM TEMPLATE FOR ALL PAGES

## Form State (useState):
```javascript
const [formData, setFormData] = useState({
  name: '',
  email: '',
  phone: '',
  stad: '',
  address: '',
  provincie: '',
  timeline: '',
  message: ''
});
```

## Icons Import:
Add Building to the imports:
```javascript
import { ..., User, MessageCircle, Calendar, Building2, MapPin, Building } from 'lucide-react';
```

## Reset Form Data in handleSubmit:
```javascript
setFormData({
  name: '',
  email: '',
  phone: '',
  stad: '',
  address: '',
  provincie: '',
  timeline: '',
  message: ''
});
```

## Form JSX Structure:
```jsx
<form onSubmit={handleSubmit} className="space-y-6">
  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
    <div>
      <label className="block text-sm font-medium text-gray-700 mb-2">
        Naam *
      </label>
      <div className="relative">
        <User className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
        <input
          type="text"
          value={formData.name}
          onChange={(e) => handleInputChange('name', e.target.value)}
          className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
          placeholder="Uw volledige naam"
          required
        />
      </div>
    </div>
    <div>
      <label className="block text-sm font-medium text-gray-700 mb-2">
        Email *
      </label>
      <div className="relative">
        <Mail className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
        <input
          type="email"
          value={formData.email}
          onChange={(e) => handleInputChange('email', e.target.value)}
          className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
          placeholder="uw.email@example.nl"
          required
        />
      </div>
    </div>
  </div>

  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
    <div>
      <label className="block text-sm font-medium text-gray-700 mb-2">
        Telefoon *
      </label>
      <div className="relative">
        <Phone className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
        <input
          type="tel"
          value={formData.phone}
          onChange={(e) => handleInputChange('phone', e.target.value)}
          className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
          placeholder="0488 234 625"
          required
        />
      </div>
    </div>
    <div>
      <label className="block text-sm font-medium text-gray-700 mb-2">
        Stad *
      </label>
      <div className="relative">
        <MapPin className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
        <input
          type="text"
          value={formData.stad}
          onChange={(e) => handleInputChange('stad', e.target.value)}
          className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
          placeholder="Amsterdam"
          required
        />
      </div>
    </div>
  </div>

  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
    <div>
      <label className="block text-sm font-medium text-gray-700 mb-2">
        Straatnaam + Huisnummer *
      </label>
      <div className="relative">
        <Building2 className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
        <input
          type="text"
          value={formData.address}
          onChange={(e) => handleInputChange('address', e.target.value)}
          className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
          placeholder="Hoofdstraat 123"
          required
        />
      </div>
    </div>
    <div>
      <label className="block text-sm font-medium text-gray-700 mb-2">
        Provincie *
      </label>
      <div className="relative">
        <Building className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
        <input
          type="text"
          value={formData.provincie}
          onChange={(e) => handleInputChange('provincie', e.target.value)}
          className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
          placeholder="Noord-Holland"
          required
        />
      </div>
    </div>
  </div>

  <div>
    <label className="block text-sm font-medium text-gray-700 mb-2">
      Gewenste startdatum *
    </label>
    <div className="relative">
      <Calendar className="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" />
      <select
        value={formData.timeline}
        onChange={(e) => handleInputChange('timeline', e.target.value)}
        className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500"
        required
      >
        <option value="">Selecteer timing</option>
        <option value="asap">Zo snel mogelijk</option>
        <option value="1-3months">1-3 maanden</option>
        <option value="3-6months">3-6 maanden</option>
        <option value="6-12months">6-12 maanden</option>
        <option value="flexible">Flexibel</option>
      </select>
    </div>
  </div>

  <div>
    <label className="block text-sm font-medium text-gray-700 mb-2">
      Bericht *
    </label>
    <div className="relative">
      <MessageCircle className="absolute left-3 top-4 w-5 h-5 text-gray-400" />
      <textarea
        value={formData.message}
        onChange={(e) => handleInputChange('message', e.target.value)}
        rows={5}
        className="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500 resize-none"
        placeholder="Beschrijf uw project..."
        required
      />
    </div>
  </div>

  <div className="text-center">
    <button
      type="submit"
      disabled={isSubmitting}
      className={`inline-flex items-center space-x-3 px-8 py-4 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg ${
        isSubmitting
          ? 'bg-gray-400 cursor-not-allowed text-white'
          : 'bg-orange-500 hover:bg-orange-600 text-white'
      }`}
    >
      {isSubmitting ? (
        <>
          <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
          <span>Verzenden...</span>
        </>
      ) : (
        <>
          <Send className="w-5 h-5" />
          <span>Verzend Bericht</span>
        </>
      )}
    </button>
  </div>
</form>
```

## Key Changes:
1. Remove all projectType buttons/selections
2. Remove all budget fields
3. Replace with standardized 8 fields
4. Use orange theme colors (focus:ring-orange-500 focus:border-orange-500)
5. Make all fields required except message
6. Use proper icons for each field
7. Update submit button to orange theme with white text